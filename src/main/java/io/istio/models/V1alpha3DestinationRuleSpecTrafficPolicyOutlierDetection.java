/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.istio.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * V1alpha3DestinationRuleSpecTrafficPolicyOutlierDetection
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-20T14:22:47.686Z[Etc/UTC]")
public class V1alpha3DestinationRuleSpecTrafficPolicyOutlierDetection {
  public static final String SERIALIZED_NAME_BASE_EJECTION_TIME = "baseEjectionTime";
  @SerializedName(SERIALIZED_NAME_BASE_EJECTION_TIME)
  private String baseEjectionTime;

  public static final String SERIALIZED_NAME_CONSECUTIVE5XX_ERRORS = "consecutive5xxErrors";
  @SerializedName(SERIALIZED_NAME_CONSECUTIVE5XX_ERRORS)
  private Object consecutive5xxErrors;

  public static final String SERIALIZED_NAME_CONSECUTIVE_ERRORS = "consecutiveErrors";
  @SerializedName(SERIALIZED_NAME_CONSECUTIVE_ERRORS)
  private Integer consecutiveErrors;

  public static final String SERIALIZED_NAME_CONSECUTIVE_GATEWAY_ERRORS = "consecutiveGatewayErrors";
  @SerializedName(SERIALIZED_NAME_CONSECUTIVE_GATEWAY_ERRORS)
  private Object consecutiveGatewayErrors;

  public static final String SERIALIZED_NAME_CONSECUTIVE_LOCAL_ORIGIN_FAILURES = "consecutiveLocalOriginFailures";
  @SerializedName(SERIALIZED_NAME_CONSECUTIVE_LOCAL_ORIGIN_FAILURES)
  private Object consecutiveLocalOriginFailures;

  public static final String SERIALIZED_NAME_INTERVAL = "interval";
  @SerializedName(SERIALIZED_NAME_INTERVAL)
  private String interval;

  public static final String SERIALIZED_NAME_MAX_EJECTION_PERCENT = "maxEjectionPercent";
  @SerializedName(SERIALIZED_NAME_MAX_EJECTION_PERCENT)
  private Integer maxEjectionPercent;

  public static final String SERIALIZED_NAME_MIN_HEALTH_PERCENT = "minHealthPercent";
  @SerializedName(SERIALIZED_NAME_MIN_HEALTH_PERCENT)
  private Integer minHealthPercent;

  public static final String SERIALIZED_NAME_SPLIT_EXTERNAL_LOCAL_ORIGIN_ERRORS = "splitExternalLocalOriginErrors";
  @SerializedName(SERIALIZED_NAME_SPLIT_EXTERNAL_LOCAL_ORIGIN_ERRORS)
  private Boolean splitExternalLocalOriginErrors;


  public V1alpha3DestinationRuleSpecTrafficPolicyOutlierDetection baseEjectionTime(String baseEjectionTime) {
    
    this.baseEjectionTime = baseEjectionTime;
    return this;
  }

   /**
   * Minimum ejection duration.
   * @return baseEjectionTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minimum ejection duration.")

  public String getBaseEjectionTime() {
    return baseEjectionTime;
  }


  public void setBaseEjectionTime(String baseEjectionTime) {
    this.baseEjectionTime = baseEjectionTime;
  }


  public V1alpha3DestinationRuleSpecTrafficPolicyOutlierDetection consecutive5xxErrors(Object consecutive5xxErrors) {
    
    this.consecutive5xxErrors = consecutive5xxErrors;
    return this;
  }

   /**
   * Number of 5xx errors before a host is ejected from the connection pool.
   * @return consecutive5xxErrors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of 5xx errors before a host is ejected from the connection pool.")

  public Object getConsecutive5xxErrors() {
    return consecutive5xxErrors;
  }


  public void setConsecutive5xxErrors(Object consecutive5xxErrors) {
    this.consecutive5xxErrors = consecutive5xxErrors;
  }


  public V1alpha3DestinationRuleSpecTrafficPolicyOutlierDetection consecutiveErrors(Integer consecutiveErrors) {
    
    this.consecutiveErrors = consecutiveErrors;
    return this;
  }

   /**
   * Get consecutiveErrors
   * @return consecutiveErrors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getConsecutiveErrors() {
    return consecutiveErrors;
  }


  public void setConsecutiveErrors(Integer consecutiveErrors) {
    this.consecutiveErrors = consecutiveErrors;
  }


  public V1alpha3DestinationRuleSpecTrafficPolicyOutlierDetection consecutiveGatewayErrors(Object consecutiveGatewayErrors) {
    
    this.consecutiveGatewayErrors = consecutiveGatewayErrors;
    return this;
  }

   /**
   * Number of gateway errors before a host is ejected from the connection pool.
   * @return consecutiveGatewayErrors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of gateway errors before a host is ejected from the connection pool.")

  public Object getConsecutiveGatewayErrors() {
    return consecutiveGatewayErrors;
  }


  public void setConsecutiveGatewayErrors(Object consecutiveGatewayErrors) {
    this.consecutiveGatewayErrors = consecutiveGatewayErrors;
  }


  public V1alpha3DestinationRuleSpecTrafficPolicyOutlierDetection consecutiveLocalOriginFailures(Object consecutiveLocalOriginFailures) {
    
    this.consecutiveLocalOriginFailures = consecutiveLocalOriginFailures;
    return this;
  }

   /**
   * Get consecutiveLocalOriginFailures
   * @return consecutiveLocalOriginFailures
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getConsecutiveLocalOriginFailures() {
    return consecutiveLocalOriginFailures;
  }


  public void setConsecutiveLocalOriginFailures(Object consecutiveLocalOriginFailures) {
    this.consecutiveLocalOriginFailures = consecutiveLocalOriginFailures;
  }


  public V1alpha3DestinationRuleSpecTrafficPolicyOutlierDetection interval(String interval) {
    
    this.interval = interval;
    return this;
  }

   /**
   * Time interval between ejection sweep analysis.
   * @return interval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Time interval between ejection sweep analysis.")

  public String getInterval() {
    return interval;
  }


  public void setInterval(String interval) {
    this.interval = interval;
  }


  public V1alpha3DestinationRuleSpecTrafficPolicyOutlierDetection maxEjectionPercent(Integer maxEjectionPercent) {
    
    this.maxEjectionPercent = maxEjectionPercent;
    return this;
  }

   /**
   * Get maxEjectionPercent
   * @return maxEjectionPercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMaxEjectionPercent() {
    return maxEjectionPercent;
  }


  public void setMaxEjectionPercent(Integer maxEjectionPercent) {
    this.maxEjectionPercent = maxEjectionPercent;
  }


  public V1alpha3DestinationRuleSpecTrafficPolicyOutlierDetection minHealthPercent(Integer minHealthPercent) {
    
    this.minHealthPercent = minHealthPercent;
    return this;
  }

   /**
   * Get minHealthPercent
   * @return minHealthPercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMinHealthPercent() {
    return minHealthPercent;
  }


  public void setMinHealthPercent(Integer minHealthPercent) {
    this.minHealthPercent = minHealthPercent;
  }


  public V1alpha3DestinationRuleSpecTrafficPolicyOutlierDetection splitExternalLocalOriginErrors(Boolean splitExternalLocalOriginErrors) {
    
    this.splitExternalLocalOriginErrors = splitExternalLocalOriginErrors;
    return this;
  }

   /**
   * Determines whether to distinguish local origin failures from external errors.
   * @return splitExternalLocalOriginErrors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Determines whether to distinguish local origin failures from external errors.")

  public Boolean getSplitExternalLocalOriginErrors() {
    return splitExternalLocalOriginErrors;
  }


  public void setSplitExternalLocalOriginErrors(Boolean splitExternalLocalOriginErrors) {
    this.splitExternalLocalOriginErrors = splitExternalLocalOriginErrors;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha3DestinationRuleSpecTrafficPolicyOutlierDetection v1alpha3DestinationRuleSpecTrafficPolicyOutlierDetection = (V1alpha3DestinationRuleSpecTrafficPolicyOutlierDetection) o;
    return Objects.equals(this.baseEjectionTime, v1alpha3DestinationRuleSpecTrafficPolicyOutlierDetection.baseEjectionTime) &&
        Objects.equals(this.consecutive5xxErrors, v1alpha3DestinationRuleSpecTrafficPolicyOutlierDetection.consecutive5xxErrors) &&
        Objects.equals(this.consecutiveErrors, v1alpha3DestinationRuleSpecTrafficPolicyOutlierDetection.consecutiveErrors) &&
        Objects.equals(this.consecutiveGatewayErrors, v1alpha3DestinationRuleSpecTrafficPolicyOutlierDetection.consecutiveGatewayErrors) &&
        Objects.equals(this.consecutiveLocalOriginFailures, v1alpha3DestinationRuleSpecTrafficPolicyOutlierDetection.consecutiveLocalOriginFailures) &&
        Objects.equals(this.interval, v1alpha3DestinationRuleSpecTrafficPolicyOutlierDetection.interval) &&
        Objects.equals(this.maxEjectionPercent, v1alpha3DestinationRuleSpecTrafficPolicyOutlierDetection.maxEjectionPercent) &&
        Objects.equals(this.minHealthPercent, v1alpha3DestinationRuleSpecTrafficPolicyOutlierDetection.minHealthPercent) &&
        Objects.equals(this.splitExternalLocalOriginErrors, v1alpha3DestinationRuleSpecTrafficPolicyOutlierDetection.splitExternalLocalOriginErrors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baseEjectionTime, consecutive5xxErrors, consecutiveErrors, consecutiveGatewayErrors, consecutiveLocalOriginFailures, interval, maxEjectionPercent, minHealthPercent, splitExternalLocalOriginErrors);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha3DestinationRuleSpecTrafficPolicyOutlierDetection {\n");
    sb.append("    baseEjectionTime: ").append(toIndentedString(baseEjectionTime)).append("\n");
    sb.append("    consecutive5xxErrors: ").append(toIndentedString(consecutive5xxErrors)).append("\n");
    sb.append("    consecutiveErrors: ").append(toIndentedString(consecutiveErrors)).append("\n");
    sb.append("    consecutiveGatewayErrors: ").append(toIndentedString(consecutiveGatewayErrors)).append("\n");
    sb.append("    consecutiveLocalOriginFailures: ").append(toIndentedString(consecutiveLocalOriginFailures)).append("\n");
    sb.append("    interval: ").append(toIndentedString(interval)).append("\n");
    sb.append("    maxEjectionPercent: ").append(toIndentedString(maxEjectionPercent)).append("\n");
    sb.append("    minHealthPercent: ").append(toIndentedString(minHealthPercent)).append("\n");
    sb.append("    splitExternalLocalOriginErrors: ").append(toIndentedString(splitExternalLocalOriginErrors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

