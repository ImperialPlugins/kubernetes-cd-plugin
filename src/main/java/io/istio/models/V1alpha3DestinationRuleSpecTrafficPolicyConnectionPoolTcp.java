/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.istio.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.istio.models.V1alpha3DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalive;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Settings common to both HTTP and TCP upstream connections.
 */
@ApiModel(description = "Settings common to both HTTP and TCP upstream connections.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-20T14:22:47.686Z[Etc/UTC]")
public class V1alpha3DestinationRuleSpecTrafficPolicyConnectionPoolTcp {
  public static final String SERIALIZED_NAME_CONNECT_TIMEOUT = "connectTimeout";
  @SerializedName(SERIALIZED_NAME_CONNECT_TIMEOUT)
  private String connectTimeout;

  public static final String SERIALIZED_NAME_MAX_CONNECTION_DURATION = "maxConnectionDuration";
  @SerializedName(SERIALIZED_NAME_MAX_CONNECTION_DURATION)
  private String maxConnectionDuration;

  public static final String SERIALIZED_NAME_MAX_CONNECTIONS = "maxConnections";
  @SerializedName(SERIALIZED_NAME_MAX_CONNECTIONS)
  private Integer maxConnections;

  public static final String SERIALIZED_NAME_TCP_KEEPALIVE = "tcpKeepalive";
  @SerializedName(SERIALIZED_NAME_TCP_KEEPALIVE)
  private V1alpha3DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalive tcpKeepalive;


  public V1alpha3DestinationRuleSpecTrafficPolicyConnectionPoolTcp connectTimeout(String connectTimeout) {
    
    this.connectTimeout = connectTimeout;
    return this;
  }

   /**
   * TCP connection timeout.
   * @return connectTimeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "TCP connection timeout.")

  public String getConnectTimeout() {
    return connectTimeout;
  }


  public void setConnectTimeout(String connectTimeout) {
    this.connectTimeout = connectTimeout;
  }


  public V1alpha3DestinationRuleSpecTrafficPolicyConnectionPoolTcp maxConnectionDuration(String maxConnectionDuration) {
    
    this.maxConnectionDuration = maxConnectionDuration;
    return this;
  }

   /**
   * The maximum duration of a connection.
   * @return maxConnectionDuration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The maximum duration of a connection.")

  public String getMaxConnectionDuration() {
    return maxConnectionDuration;
  }


  public void setMaxConnectionDuration(String maxConnectionDuration) {
    this.maxConnectionDuration = maxConnectionDuration;
  }


  public V1alpha3DestinationRuleSpecTrafficPolicyConnectionPoolTcp maxConnections(Integer maxConnections) {
    
    this.maxConnections = maxConnections;
    return this;
  }

   /**
   * Maximum number of HTTP1 /TCP connections to a destination host.
   * @return maxConnections
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum number of HTTP1 /TCP connections to a destination host.")

  public Integer getMaxConnections() {
    return maxConnections;
  }


  public void setMaxConnections(Integer maxConnections) {
    this.maxConnections = maxConnections;
  }


  public V1alpha3DestinationRuleSpecTrafficPolicyConnectionPoolTcp tcpKeepalive(V1alpha3DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalive tcpKeepalive) {
    
    this.tcpKeepalive = tcpKeepalive;
    return this;
  }

   /**
   * Get tcpKeepalive
   * @return tcpKeepalive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha3DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalive getTcpKeepalive() {
    return tcpKeepalive;
  }


  public void setTcpKeepalive(V1alpha3DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalive tcpKeepalive) {
    this.tcpKeepalive = tcpKeepalive;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha3DestinationRuleSpecTrafficPolicyConnectionPoolTcp v1alpha3DestinationRuleSpecTrafficPolicyConnectionPoolTcp = (V1alpha3DestinationRuleSpecTrafficPolicyConnectionPoolTcp) o;
    return Objects.equals(this.connectTimeout, v1alpha3DestinationRuleSpecTrafficPolicyConnectionPoolTcp.connectTimeout) &&
        Objects.equals(this.maxConnectionDuration, v1alpha3DestinationRuleSpecTrafficPolicyConnectionPoolTcp.maxConnectionDuration) &&
        Objects.equals(this.maxConnections, v1alpha3DestinationRuleSpecTrafficPolicyConnectionPoolTcp.maxConnections) &&
        Objects.equals(this.tcpKeepalive, v1alpha3DestinationRuleSpecTrafficPolicyConnectionPoolTcp.tcpKeepalive);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connectTimeout, maxConnectionDuration, maxConnections, tcpKeepalive);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha3DestinationRuleSpecTrafficPolicyConnectionPoolTcp {\n");
    sb.append("    connectTimeout: ").append(toIndentedString(connectTimeout)).append("\n");
    sb.append("    maxConnectionDuration: ").append(toIndentedString(maxConnectionDuration)).append("\n");
    sb.append("    maxConnections: ").append(toIndentedString(maxConnections)).append("\n");
    sb.append("    tcpKeepalive: ").append(toIndentedString(tcpKeepalive)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

