/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.istio.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.istio.models.V1alpha3DestinationRuleSpecTrafficPolicyPort;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * V1alpha1WasmPluginSpecMatch
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-20T14:22:47.686Z[Etc/UTC]")
public class V1alpha1WasmPluginSpecMatch {
  /**
   * Criteria for selecting traffic by their direction.
   */
  @JsonAdapter(ModeEnum.Adapter.class)
  public enum ModeEnum {
    UNDEFINED("UNDEFINED"),
    
    CLIENT("CLIENT"),
    
    SERVER("SERVER"),
    
    CLIENT_AND_SERVER("CLIENT_AND_SERVER");

    private String value;

    ModeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ModeEnum fromValue(String value) {
      for (ModeEnum b : ModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ModeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ModeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_MODE = "mode";
  @SerializedName(SERIALIZED_NAME_MODE)
  private ModeEnum mode;

  public static final String SERIALIZED_NAME_PORTS = "ports";
  @SerializedName(SERIALIZED_NAME_PORTS)
  private List<V1alpha3DestinationRuleSpecTrafficPolicyPort> ports = null;


  public V1alpha1WasmPluginSpecMatch mode(ModeEnum mode) {
    
    this.mode = mode;
    return this;
  }

   /**
   * Criteria for selecting traffic by their direction.
   * @return mode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Criteria for selecting traffic by their direction.")

  public ModeEnum getMode() {
    return mode;
  }


  public void setMode(ModeEnum mode) {
    this.mode = mode;
  }


  public V1alpha1WasmPluginSpecMatch ports(List<V1alpha3DestinationRuleSpecTrafficPolicyPort> ports) {
    
    this.ports = ports;
    return this;
  }

  public V1alpha1WasmPluginSpecMatch addPortsItem(V1alpha3DestinationRuleSpecTrafficPolicyPort portsItem) {
    if (this.ports == null) {
      this.ports = new ArrayList<>();
    }
    this.ports.add(portsItem);
    return this;
  }

   /**
   * Criteria for selecting traffic by their destination port.
   * @return ports
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Criteria for selecting traffic by their destination port.")

  public List<V1alpha3DestinationRuleSpecTrafficPolicyPort> getPorts() {
    return ports;
  }


  public void setPorts(List<V1alpha3DestinationRuleSpecTrafficPolicyPort> ports) {
    this.ports = ports;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1WasmPluginSpecMatch v1alpha1WasmPluginSpecMatch = (V1alpha1WasmPluginSpecMatch) o;
    return Objects.equals(this.mode, v1alpha1WasmPluginSpecMatch.mode) &&
        Objects.equals(this.ports, v1alpha1WasmPluginSpecMatch.ports);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mode, ports);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1WasmPluginSpecMatch {\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    ports: ").append(toIndentedString(ports)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

